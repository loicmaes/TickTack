generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {
  uid       String   @id
  firstName String
  lastName  String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sessions Session[]
  sw_runs  StopWatchRun[]

  @@map("users")
}

model Session {
  id        Int       @id @default(autoincrement())
  userUid   String
  authToken String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  user User @relation(fields: [userUid], references: [uid], onDelete: Cascade)

  @@unique([userUid, authToken])
  @@map("sessions")
}

model StopWatchRun {
  id          Int      @id @default(autoincrement())
  userUid     String
  startedAt   DateTime
  timeElapsed Float
  label       String?

  user   User             @relation(fields: [userUid], references: [uid], onDelete: Cascade)
  breaks StopWatchBreak[]

  @@map("sw_runs")
}

model StopWatchBreak {
  id                  Int     @id @default(autoincrement())
  runId               Int
  label               String?
  relativeTimeElapsed Float
  absoluteTimeElapsed Float

  run StopWatchRun @relation(fields: [runId], references: [id], onDelete: Cascade)

  @@map("sw_breaks")
}
